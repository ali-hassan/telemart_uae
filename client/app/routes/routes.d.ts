/**
 * File generated by js-routes RubyVariables.GEM_VERSION
 * Based on Rails RubyVariables.RAILS_VERSION routes of RubyVariables.APP_CLASS
 */
declare type Optional<T> = {
    [P in keyof T]?: T[P] | null;
};
declare type BaseRouteParameter = string | boolean | Date | number;
declare type MethodRouteParameter = BaseRouteParameter | (() => BaseRouteParameter);
declare type ModelRouteParameter = {
    id: MethodRouteParameter;
} | {
    to_param: MethodRouteParameter;
} | {
    toParam: MethodRouteParameter;
};
declare type RequiredRouteParameter = BaseRouteParameter | ModelRouteParameter;
declare type OptionalRouteParameter = undefined | null | RequiredRouteParameter;
declare type QueryRouteParameter = OptionalRouteParameter | QueryRouteParameter[] | {
    [k: string]: QueryRouteParameter;
};
declare type RouteParameters = Record<string, QueryRouteParameter>;
declare type Serializable = Record<string, unknown>;
declare type Serializer = (value: Serializable) => string;
declare type RouteHelperExtras = {
    requiredParams(): string[];
    toString(): string;
};
declare type RequiredParameters<T extends number> = T extends 1 ? [RequiredRouteParameter] : T extends 2 ? [RequiredRouteParameter, RequiredRouteParameter] : T extends 3 ? [RequiredRouteParameter, RequiredRouteParameter, RequiredRouteParameter] : T extends 4 ? [
    RequiredRouteParameter,
    RequiredRouteParameter,
    RequiredRouteParameter,
    RequiredRouteParameter
] : RequiredRouteParameter[];
declare type RouteHelperOptions<T extends string> = RouteOptions & Optional<Record<T, OptionalRouteParameter>>;
declare type RouteHelper<T extends number = number, U extends string = string> = ((...args: [...RequiredParameters<T>, RouteHelperOptions<U>]) => string) & RouteHelperExtras;
declare type RouteHelpers = Record<string, RouteHelper>;
declare type Configuration = {
    prefix: string;
    default_url_options: RouteParameters;
    special_options_key: string;
    serializer: Serializer;
};
interface RouterExposedMethods {
    config(): Configuration;
    configure(arg: Partial<Configuration>): Configuration;
    serialize: Serializer;
}
declare type KeywordUrlOptions = Optional<{
    host: string;
    protocol: string;
    subdomain: string;
    port: string | number;
    anchor: string;
    trailing_slash: boolean;
    params: RouteParameters;
}>;
declare type RouteOptions = KeywordUrlOptions & RouteParameters;
declare type PartsTable = Record<string, {
    r?: boolean;
    d?: OptionalRouteParameter;
}>;
declare type ModuleType = "CJS" | "AMD" | "UMD" | "ESM" | "DTS" | "NIL";
declare const RubyVariables: {
    PREFIX: string;
    DEPRECATED_GLOBBING_BEHAVIOR: boolean;
    SPECIAL_OPTIONS_KEY: string;
    DEFAULT_URL_OPTIONS: RouteParameters;
    SERIALIZER: Serializer;
    ROUTES_OBJECT: RouteHelpers;
    MODULE_TYPE: ModuleType;
    WRAPPER: <T>(callback: T) => T;
};
declare const define: undefined | (((arg: unknown[], callback: () => unknown) => void) & {
    amd?: unknown;
});
declare const module: {
    exports: any;
} | undefined;
export const configure: RouterExposedMethods['configure'];

export const config: RouterExposedMethods['config'];

export const serialize: RouterExposedMethods['serialize'];

/**
 * Generates rails route to
 * (/:locale)/infos/about(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const about_infos_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:id/accept_preauthorized(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const accept_preauthorized_person_message_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/terms/accept(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const accept_terms_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:id/acceptance_preauthorized(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const acceptance_preauthorized_person_message_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/community_memberships/access_denied(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const access_denied_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/paypal/account_create(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const account_create_admin2_payment_system_paypal_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/paypal_preferences/account_create(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const account_create_admin_community_paypal_preferences_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/settings/account(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const account_person_settings_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listing_images/add_from_file(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const add_from_file_listing_images_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/listing_images/add_from_file(.:format)
 * @param {any} listing_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const add_from_file_listing_listing_images_path: ((
  listing_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listing_images/add_from_url(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const add_from_url_listing_images_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/listing_images/add_from_url(.:format)
 * @param {any} listing_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const add_from_url_listing_listing_images_path: ((
  listing_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing_fields/add_unit(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const add_unit_admin2_listings_listing_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/order-types/add_unit(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const add_unit_admin2_listings_order_types_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/user-fields/add_unit(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const add_unit_admin2_users_user_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/advanced/custom-script(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_advanced_custom_scripts_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/advanced/delete-marketplace/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_advanced_delete_marketplace_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/advanced/delete-marketplace(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_advanced_delete_marketplaces_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/advanced/new-features(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_advanced_experimental_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/advanced/recaptcha(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_advanced_recaptcha_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/analytics/google-analytics(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_analytics_google_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/analytics/google-tag-manager(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_analytics_google_manager_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/cover-photos(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_design_cover_photos_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/arrangement(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_design_display_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/footer(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_design_footer_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/landing-page/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_design_landing_page_version_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/landing-page/:landing_page_version_id/sections/:id(.:format)
 * @param {any} landing_page_version_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_design_landing_page_version_section_path: ((
  landing_page_version_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/landing-page/:landing_page_version_id/sections(.:format)
 * @param {any} landing_page_version_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_design_landing_page_version_sections_path: ((
  landing_page_version_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/landing-page(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_design_landing_page_versions_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/logos-and-color(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_design_logos_color_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/top-bar(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_design_topbar_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/emails/compose-email(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_emails_email_users_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/emails/automatic-newsletter(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_emails_newsletters_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/emails/custom-outgoing-address/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_emails_outgoing_email_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/emails/custom-outgoing-address(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_emails_outgoing_emails_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/emails/welcome-email(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_emails_welcome_emails_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/admin-notifications(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_general_admin_notifications_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/domain/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_general_domain_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/domain(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_general_domains_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/essentials(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_general_essentials_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/privacy(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_general_privacy_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/static-content(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_general_static_content_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/categories(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_listings_categories_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/categories/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_listings_category_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing-approval(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_listings_listing_approval_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing-comments(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_listings_listing_comments_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing_fields/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_listings_listing_field_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing_fields(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_listings_listing_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/manage-listings(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_listings_manage_listings_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/order-types/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_listings_order_type_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/order-types(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_listings_order_types_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/country-currency(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_payment_system_country_currencies_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/paypal/:payment_gateway(.:format)
 * @param {any} payment_gateway
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_payment_system_paypal_path: ((
  payment_gateway: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/paypal(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_payment_system_paypal_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/stripe/:payment_gateway(.:format)
 * @param {any} payment_gateway
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_payment_system_stripe_path: ((
  payment_gateway: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/stripe(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_payment_system_stripe_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/minimum-listing-price(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_payment_system_transaction_size_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/plan(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_plan_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/search-and-location/location(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_search_location_locations_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/search-and-location/search(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_search_location_search_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/seo/category-pages-meta-tags(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_seo_category_pages_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/seo/google-search-console(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_seo_google_console_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/seo/landing-page-meta-tags(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_seo_landing_pages_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/seo/listing-pages-meta-tags(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_seo_listing_pages_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/seo/profile-pages-meta-tags(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_seo_profile_pages_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/seo/search-page-meta-tags(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_seo_search_pages_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/seo/sitemap-and-robots(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_seo_sitemap_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/social-media/image-and-tags(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_social_media_image_tags_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/social-media/social-share-buttons(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_social_media_social_share_buttons_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/social-media/twitter(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_social_media_twitter_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/configure-transactions(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_transactions_reviews_config_transactions_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/view-conversations/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_transactions_reviews_conversation_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/view-conversations(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_transactions_reviews_conversations_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/manage-reviews/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_transactions_reviews_manage_review_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/manage-reviews(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_transactions_reviews_manage_reviews_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/manage-transactions/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_transactions_reviews_manage_transaction_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/manage-transactions(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_transactions_reviews_manage_transactions_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/view-invitations(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_users_invitations_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/manage-users/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_users_manage_user_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/manage-users(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_users_manage_users_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/signup-and-login(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_users_signup_login_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/user-fields/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_users_user_field_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/user-fields(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_users_user_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/user-rights(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin2_users_user_rights_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/categories(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_categories_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/categories/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_category_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_communities_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/community_memberships/:id(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_community_membership_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/community_memberships(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_community_memberships_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/conversations/:id(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_conversation_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/conversations(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_conversations_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/emails/:id(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_email_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/emails(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_emails_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/invitations(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_invitations_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/listings/:id(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_listing_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/listings(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_listings_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/paypal_preferences(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_paypal_preferences_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/community_seo_settings(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_seo_settings_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/testimonials/:id(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_testimonial_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/testimonials(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_testimonials_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/transactions/:id(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_transaction_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/transactions(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_community_transactions_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/custom_fields/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_custom_field_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/custom_fields(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_custom_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/details(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_details_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/details/edit(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_details_edit_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/domain(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_domain_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/footer(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_footer_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/footer/edit(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_footer_edit_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/getting_started_guide(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_getting_started_guide_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/getting_started_guide/cover_photo(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_getting_started_guide_cover_photo_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/getting_started_guide/filter(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_getting_started_guide_filter_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/getting_started_guide/invitation(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_getting_started_guide_invitation_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/getting_started_guide/listing(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_getting_started_guide_listing_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/getting_started_guide/payment(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_getting_started_guide_payment_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/getting_started_guide/skip_payment(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_getting_started_guide_skip_payment_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/getting_started_guide/slogan_and_description(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_getting_started_guide_slogan_and_description_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/landing_page(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_landing_page_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/landing_page_versions/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_landing_page_version_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/landing_page_versions/:landing_page_version_id/sections/:id(.:format)
 * @param {any} landing_page_version_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_landing_page_version_section_path: ((
  landing_page_version_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/landing_page_versions/:landing_page_version_id/sections(.:format)
 * @param {any} landing_page_version_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_landing_page_version_sections_path: ((
  landing_page_version_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/landing_page_versions(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_landing_page_versions_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/listing_shapes/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_listing_shape_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/listing_shapes(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_listing_shapes_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/look_and_feel(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_look_and_feel_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/look_and_feel/edit(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_look_and_feel_edit_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/new_layout(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_new_layout_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/payment_preferences(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_payment_preferences_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/paypal_preferences(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_paypal_preferences_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/paypal_preferences/account_create(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_paypal_preferences_account_create_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/paypal_preferences/permissions_verified(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_paypal_preferences_permissions_verified_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/user_fields/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_person_custom_field_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/user_fields(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_person_custom_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/plan(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_plan_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/settings(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_setting_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/topbar(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_topbar_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/topbar/edit(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_topbar_edit_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/new_layout(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const admin_update_new_layout_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/analytics(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const analytics_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/manage-listings/:id/approve(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const approve_admin2_listings_manage_listing_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/listings/:id/approve(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const approve_admin_community_listing_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/paypal_account/ask_billing_agreement(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const ask_billing_agreement_person_paypal_account_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/paypal_account/ask_order_permission(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const ask_order_permission_person_paypal_account_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/manage-users/:id/ban(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const ban_admin2_users_manage_user_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/community_memberships/:id/ban(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const ban_admin_community_community_membership_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/paypal_account/billing_agreement_cancel(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const billing_agreement_cancel_person_paypal_account_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/paypal_account/billing_agreement_success(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const billing_agreement_success_person_paypal_account_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/booked(.:format)
 * @param {any} listing_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const booked_path: ((
  listing_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /bounces(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const bounces_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/browse(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const browse_listings_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/manage-transactions/:id/cancel(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const cancel_admin2_transactions_reviews_manage_transaction_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/transactions/:id/cancel(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const cancel_admin_community_transaction_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/paypal_service/checkout_orders/cancel(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const cancel_paypal_service_checkout_orders_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:id/cancel(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const cancel_person_message_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/cancel(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const cancel_person_registration_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/categories/change_category(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const change_category_admin2_listings_categories_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /change_locale(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const change_locale_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/sessions/change_mistyped_email(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const change_mistyped_email_sessions_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/domain/check_availability(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const check_availability_admin2_general_domains_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/domain/check_availability(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const check_availability_admin_domain_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/check_email_availability_and_validity(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const check_email_availability_and_validity_people_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/check_email_availability(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const check_email_availability_people_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/emails/custom-outgoing-address/check_email_status(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const check_email_status_admin2_emails_outgoing_emails_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/check_email_status(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const check_email_status_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/check_invitation_code(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const check_invitation_code_people_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/:id/check_username_availability(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const check_username_availability_person_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/manage-listings/close(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const close_admin2_listings_manage_listings_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/listing_shapes/:id/close_listings(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const close_listings_admin_listing_shape_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/listings/:id/close(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const close_person_listing_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/paypal/common_update(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const common_update_admin2_payment_system_paypal_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/stripe/common_update(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const common_update_admin2_payment_system_stripe_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/payment_preferences/common_update(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const common_update_admin_payment_preferences_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /communities(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const communities_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/community_memberships/check_email_availability_and_validity(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const community_memberships_check_email_availability_and_validity_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/community_memberships/check_invitation_code(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const community_memberships_check_invitation_code_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /not_available(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const community_not_available_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /community_not_found(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const community_not_found_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/manage-transactions/:id/confirm(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const confirm_admin2_transactions_reviews_manage_transaction_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/transactions/:id/confirm(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const confirm_admin_community_transaction_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/domain/confirm_domain_setup(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const confirm_domain_setup_admin2_general_domains_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/domain/confirm_domain_setup(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const confirm_domain_setup_admin_domain_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:id/confirm(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const confirm_person_message_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/confirmation(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const confirmation_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/confirmation_pending(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const confirmation_pending_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:id/confirmation(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const confirmation_person_message_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/consent/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const consent_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/consent(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const consent_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/contact(.:format)
 * @param {any} listing_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const contact_to_listing_path: ((
  listing_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/create_contact(.:format)
 * @param {any} listing_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const create_contact_path: ((
  listing_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/domain/create_domain_setup(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const create_domain_setup_admin2_general_domains_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/domain/create_domain_setup(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const create_domain_setup_admin_domain_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/settings/payments(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const create_person_payment_settings_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/create_sender_address(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const create_sender_address_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/manage-listings/delete(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const delete_admin2_listings_manage_listings_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:id/delete(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const delete_listing_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/delete_marketplace(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const delete_marketplace_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing_fields/:id/delete_popup(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const delete_popup_admin2_listings_listing_field_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/user-fields/:id/delete_popup(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const delete_popup_admin2_users_user_field_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/manage-reviews/:id/delete_review(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const delete_review_admin2_transactions_reviews_manage_review_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /design(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const design_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/categories/:id/destroy_and_move(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const destroy_and_move_admin2_listings_category_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/categories/:id/destroy_and_move(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const destroy_and_move_admin_category_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/sign_out(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const destroy_person_session_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/paypal/:payment_gateway/disable(.:format)
 * @param {any} payment_gateway
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const disable_admin2_payment_system_paypal_path: ((
  payment_gateway: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/stripe/:payment_gateway/disable(.:format)
 * @param {any} payment_gateway
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const disable_admin2_payment_system_stripe_path: ((
  payment_gateway: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/payment_preferences/:payment_gateway/disable(.:format)
 * @param {any} payment_gateway
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const disable_admin_payment_preference_path: ((
  payment_gateway: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/manage-transactions/:id/dismiss(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const dismiss_admin2_transactions_reviews_manage_transaction_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/transactions/:id/dismiss(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const dismiss_admin_community_transaction_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/landing-page/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin2_design_landing_page_version_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/landing-page/:landing_page_version_id/sections/:id/edit(.:format)
 * @param {any} landing_page_version_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin2_design_landing_page_version_section_path: ((
  landing_page_version_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/emails/custom-outgoing-address/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin2_emails_outgoing_email_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/domain/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin2_general_domain_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/categories/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin2_listings_category_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing_fields/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin2_listings_listing_field_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/order-types/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin2_listings_order_type_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/paypal/:payment_gateway/edit(.:format)
 * @param {any} payment_gateway
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin2_payment_system_paypal_path: ((
  payment_gateway: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/stripe/:payment_gateway/edit(.:format)
 * @param {any} payment_gateway
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin2_payment_system_stripe_path: ((
  payment_gateway: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/user-fields/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin2_users_user_field_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/categories/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin_category_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/community_memberships/:id/edit(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin_community_community_membership_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/emails/:id/edit(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin_community_email_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/listings/:id/edit(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin_community_listing_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/testimonials/:id/edit(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin_community_testimonial_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/custom_fields/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin_custom_field_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/landing_page_versions/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin_landing_page_version_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/landing_page_versions/:landing_page_version_id/sections/:id/edit(.:format)
 * @param {any} landing_page_version_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin_landing_page_version_section_path: ((
  landing_page_version_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/listing_shapes/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin_listing_shape_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/user_fields/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_admin_person_custom_field_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/consent/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_consent_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/edit_details(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_details_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing_fields/edit_expiration(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_expiration_admin2_listings_listing_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/custom_fields/edit_expiration(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_expiration_admin_custom_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/edit_form_content(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_form_content_listings_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/homepage/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_homepage_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/infos/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_info_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_listing_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listing_images/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_listing_image_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/listing_images/:id/edit(.:format)
 * @param {any} listing_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_listing_listing_image_path: ((
  listing_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing_fields/edit_location(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_location_admin2_listings_listing_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/custom_fields/edit_location(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_location_admin_custom_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/edit_look_and_feel(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_look_and_feel_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /mercury/images/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_mercury_image_path: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/paypal_service/checkout_orders/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_paypal_service_checkout_order_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_person_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/emails/:id/edit(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_person_email_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/followed_people/:id/edit(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_person_followed_person_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/followers/:id/edit(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_person_follower_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/listings/:id/edit(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_person_listing_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:id/edit(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_person_message_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:message_id/feedbacks/:id/edit(.:format)
 * @param {any} person_id
 * @param {any} message_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_person_message_feedback_path: ((
  person_id: RequiredRouteParameter,
  message_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:message_id/messages/:id/edit(.:format)
 * @param {any} person_id
 * @param {any} message_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_person_message_message_path: ((
  person_id: RequiredRouteParameter,
  message_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/password/edit(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_person_password_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/person_messages/:id/edit(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_person_person_message_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/edit(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_person_registration_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/settings/edit(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_person_settings_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/testimonials/:id/edit(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_person_testimonial_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing_fields/edit_price(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_price_admin2_listings_listing_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/custom_fields/edit_price(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_price_admin_custom_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/conductor/action_mailbox/inbound_emails/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_rails_conductor_inbound_email_path: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/manage-reviews/:id/edit_review(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_review_admin2_transactions_reviews_manage_review_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/sessions/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_session_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/sms/edit(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_sms_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/terms/edit(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_terms_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/edit_text_instructions(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_text_instructions_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/user_feedbacks/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_user_feedback_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/edit_welcome_email(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const edit_welcome_email_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/paypal/:payment_gateway/enable(.:format)
 * @param {any} payment_gateway
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const enable_admin2_payment_system_paypal_path: ((
  payment_gateway: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/stripe/:payment_gateway/enable(.:format)
 * @param {any} payment_gateway
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const enable_admin2_payment_system_stripe_path: ((
  payment_gateway: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/payment_preferences/:payment_gateway/enable(.:format)
 * @param {any} payment_gateway
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const enable_admin_payment_preference_path: ((
  payment_gateway: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /410(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const error_gone_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /406(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const error_not_acceptable_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /404(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const error_not_found_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/manage-listings/export(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const export_admin2_listings_manage_listings_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/manage-transactions/export(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const export_admin2_transactions_reviews_manage_transactions_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/listings/export(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const export_admin_community_listings_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/transactions/export(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const export_admin_community_transactions_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/manage-listings/export_status(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const export_status_admin2_listings_manage_listings_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/manage-transactions/export_status(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const export_status_admin2_transactions_reviews_manage_transactions_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/listings/export_status(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const export_status_admin_community_listings_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/transactions/export_status(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const export_status_admin_community_transactions_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:id/follow(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const follow_listing_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/getting_started(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const getting_started_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/getting_started_guide(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const getting_started_guide_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/getting_started_guide/cover_photo(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const getting_started_guide_cover_photo_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/getting_started_guide/filter(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const getting_started_guide_filter_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/getting_started_guide/invitation(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const getting_started_guide_invitation_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/getting_started_guide/listing(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const getting_started_guide_listing_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/getting_started_guide/paypal(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const getting_started_guide_paypal_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/getting_started_guide/slogan_and_description(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const getting_started_guide_slogan_and_description_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/community_memberships/give_consent(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const give_consent_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/homepage/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const homepage_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/homepage(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const homepage_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /:locale(.:format)
 * @param {any} locale
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const homepage_with_locale_path: ((
  locale: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const homepage_without_locale_path: ((
  options?: {} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/infos/how_to_use(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const how_to_use_infos_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listing_images/:id/image_status(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const image_status_listing_image_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/infos/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const info_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/infos(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const infos_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/initiate(.:format)
 * @param {any} listing_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const initiate_order_path: ((
  listing_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/initiated(.:format)
 * @param {any} listing_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const initiated_order_path: ((
  listing_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /int_api/create_trial_marketplace(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const int_api_create_trial_marketplace_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /int_api/listings/:listing_id/blocked_dates(.:format)
 * @param {any} listing_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const int_api_listing_blocked_dates_path: ((
  listing_id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /int_api/listings/:listing_id/bookings(.:format)
 * @param {any} listing_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const int_api_listing_bookings_path: ((
  listing_id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/invitations(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const invitations_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/homepage/join(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const join_homepage_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /_lp_preview(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const landing_page_preview_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /:locale(.:format)
 * @param {any} locale
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const landing_page_with_locale_path: ((
  locale: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const landing_page_without_locale_path: ((
  options?: {} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const listing_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listing_bubble/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const listing_bubble_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listing_bubble_multiple/:ids(.:format)
 * @param {any} ids
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const listing_bubble_multiple_path: ((
  ids: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/comments/:id(.:format)
 * @param {any} listing_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const listing_comment_path: ((
  listing_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/comments(.:format)
 * @param {any} listing_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const listing_comments_path: ((
  listing_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listing_images/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const listing_image_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listing_images(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const listing_images_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/listing_images/:id(.:format)
 * @param {any} listing_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const listing_listing_image_path: ((
  listing_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/listing_images(.:format)
 * @param {any} listing_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const listing_listing_images_path: ((
  listing_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const listings_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/settings/listings(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const listings_person_settings_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/locations_json(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const locations_json_listings_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/login(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const login_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/logout(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const logout_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /mail_view
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const mail_preview_path: ((
  options?: {} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/menu_links(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const menu_links_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const mercury_engine_path: ((
  options?: {} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * //editor(/*requested_uri)(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const mercury_engine_mercury_editor_path: ((
  options?: {requested_uri?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /mercury/images/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const mercury_image_path: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /mercury/images(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const mercury_images_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/mercury_update(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const mercury_update_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/sms/message_arrived(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const message_arrived_sms_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/more_listings(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const more_listings_listings_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/listings/:id/move_to_top(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const move_to_top_person_listing_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/landing-page/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin2_design_landing_page_version_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/landing-page/:landing_page_version_id/sections/new(.:format)
 * @param {any} landing_page_version_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin2_design_landing_page_version_section_path: ((
  landing_page_version_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/emails/custom-outgoing-address/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin2_emails_outgoing_email_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/domain/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin2_general_domain_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/categories/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin2_listings_category_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing_fields/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin2_listings_listing_field_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/order-types/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin2_listings_order_type_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/paypal/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin2_payment_system_paypal_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/stripe/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin2_payment_system_stripe_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/user-fields/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin2_users_user_field_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/categories/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin_category_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin_community_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/community_memberships/new(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin_community_community_membership_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/emails/new(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin_community_email_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/testimonials/new(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin_community_testimonial_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/custom_fields/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin_custom_field_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/landing_page_versions/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin_landing_page_version_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/landing_page_versions/:landing_page_version_id/sections/new(.:format)
 * @param {any} landing_page_version_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin_landing_page_version_section_path: ((
  landing_page_version_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/listing_shapes/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin_listing_shape_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/user_fields/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_admin_person_custom_field_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /communities/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_community_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/consent/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_consent_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/new_form_content(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_form_content_listings_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/listings/new_form_content(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_form_content_person_listings_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/homepage/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_homepage_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/infos/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_info_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/invitations/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_invitation_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_listing_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listing_images/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_listing_image_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/listing_images/new(.:format)
 * @param {any} listing_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_listing_listing_image_path: ((
  listing_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /mercury/images/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_mercury_image_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/paypal_service/checkout_orders/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_paypal_service_checkout_order_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_person_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/emails/new(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_person_email_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/followed_people/new(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_person_followed_person_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/followers/new(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_person_follower_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/listings/new(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_person_listing_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/new(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_person_message_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:message_id/feedbacks/new(.:format)
 * @param {any} person_id
 * @param {any} message_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_person_message_feedback_path: ((
  person_id: RequiredRouteParameter,
  message_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:message_id/messages/new(.:format)
 * @param {any} person_id
 * @param {any} message_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_person_message_message_path: ((
  person_id: RequiredRouteParameter,
  message_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/password/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_person_password_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/person_messages/new(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_person_person_message_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/sign_up(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_person_registration_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/login(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_person_session_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/settings/new(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_person_settings_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/testimonials/new(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_person_testimonial_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/transactions/new(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_person_transaction_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/conductor/action_mailbox/inbound_emails/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_rails_conductor_inbound_email_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/conductor/action_mailbox/inbound_emails/sources/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_rails_conductor_inbound_email_source_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /listings/new/:type(.:format)
 * @param {any} type
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_request_without_locale_path: ((
  type: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/sessions/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_session_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/sms/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_sms_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/terms/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_terms_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/transactions/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_transaction_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/testimonials/new_unskip(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_unskip_admin_community_testimonials_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/user_feedbacks/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const new_user_feedback_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/infos/news(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const news_infos_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/settings/notifications(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const notifications_person_settings_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/stripe/onboarding_enable(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const onboarding_enable_admin2_payment_system_stripe_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/categories/order(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const order_admin2_listings_categories_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing_fields/order(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const order_admin2_listings_listing_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/order-types/order(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const order_admin2_listings_order_types_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/user-fields/order(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const order_admin2_users_user_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/categories/order(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const order_admin_categories_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/custom_fields/order(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const order_admin_custom_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/listing_shapes/order(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const order_admin_listing_shapes_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/user_fields/order(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const order_admin_person_custom_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/settings/payments/paypal_account(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const paypal_account_settings_payment_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /webhooks/paypal_ipn(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const paypal_ipn_hook_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/transactions/op_status/:process_token(.:format)
 * @param {any} process_token
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const paypal_op_status_path: ((
  process_token: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/paypal_service/checkout_orders/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const paypal_service_checkout_order_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/paypal_service/checkout_orders(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const paypal_service_checkout_orders_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/community_memberships/pending_consent(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const pending_consent_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const people_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/confirmation(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const people_confirmation_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/sign_up(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const people_sign_up_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/paypal/permissions_verified(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const permissions_verified_admin2_payment_system_paypal_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/paypal_preferences/permissions_verified(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const permissions_verified_admin_community_paypal_preferences_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/paypal_account/permissions_verified(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const permissions_verified_person_paypal_account_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:username(.:format)
 * @param {any} username
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_path: ((
  username: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/emails/:id(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_email_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/emails(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_emails_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/auth/facebook(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_facebook_omniauth_authorize_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/auth/facebook/callback(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_facebook_omniauth_callback_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/followed_people(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_followed_people_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/followed_people/:id(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_followed_person_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/followers/:id(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_follower_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/followers(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_followers_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/auth/google_oauth2(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_google_oauth2_omniauth_authorize_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/auth/google_oauth2/callback(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_google_oauth2_omniauth_callback_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/inbox(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_inbox_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/auth/linkedin(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_linkedin_omniauth_authorize_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/auth/linkedin/callback(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_linkedin_omniauth_callback_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/listings/:id(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_listing_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/listings(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_listings_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:id(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_message_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:message_id/feedbacks/:id(.:format)
 * @param {any} person_id
 * @param {any} message_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_message_feedback_path: ((
  person_id: RequiredRouteParameter,
  message_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:message_id/feedbacks(.:format)
 * @param {any} person_id
 * @param {any} message_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_message_feedbacks_path: ((
  person_id: RequiredRouteParameter,
  message_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:message_id/messages/:id(.:format)
 * @param {any} person_id
 * @param {any} message_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_message_message_path: ((
  person_id: RequiredRouteParameter,
  message_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:message_id/messages(.:format)
 * @param {any} person_id
 * @param {any} message_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_message_messages_path: ((
  person_id: RequiredRouteParameter,
  message_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_messages_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/password(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_password_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/settings/payments(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_payment_settings_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/settings/redirect_to_stripe(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_payment_settings_redirect_to_stripe_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/settings/stripe_callback(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_payment_settings_stripe_callback_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/person_messages/:id(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_person_message_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/person_messages(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_person_messages_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_registration_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/people/login(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_session_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/settings(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_settings_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/stripe_account(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_stripe_account_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/testimonials/:id(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_testimonial_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/testimonials(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_testimonials_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/transactions/:id(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_transaction_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/transactions(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person_transactions_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/manage-users/:id/posting_allowed(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const posting_allowed_admin2_users_manage_user_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/community_memberships/posting_allowed(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const posting_allowed_admin_community_community_memberships_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/paypal_preferences/preferences_update(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const preferences_update_admin_community_paypal_preferences_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/infos/privacy(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const privacy_infos_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/manage-users/:id/promote_admin(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const promote_admin_admin2_users_manage_user_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/community_memberships/promote_admin(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const promote_admin_admin_community_community_memberships_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/active_storage/representations/redirect/:signed_blob_id/:variation_key/*filename(.:format)
 * @param {any} signed_blob_id
 * @param {any} variation_key
 * @param {any} filename
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_blob_representation_path: ((
  signed_blob_id: RequiredRouteParameter,
  variation_key: RequiredRouteParameter,
  filename: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/active_storage/representations/proxy/:signed_blob_id/:variation_key/*filename(.:format)
 * @param {any} signed_blob_id
 * @param {any} variation_key
 * @param {any} filename
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_blob_representation_proxy_path: ((
  signed_blob_id: RequiredRouteParameter,
  variation_key: RequiredRouteParameter,
  filename: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/conductor/action_mailbox/inbound_emails/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_conductor_inbound_email_path: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/conductor/action_mailbox/:inbound_email_id/reroute(.:format)
 * @param {any} inbound_email_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_conductor_inbound_email_reroute_path: ((
  inbound_email_id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/conductor/action_mailbox/inbound_emails/sources(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_conductor_inbound_email_sources_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/conductor/action_mailbox/inbound_emails(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_conductor_inbound_emails_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/active_storage/direct_uploads(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_direct_uploads_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/active_storage/disk/:encoded_key/*filename(.:format)
 * @param {any} encoded_key
 * @param {any} filename
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_disk_service_path: ((
  encoded_key: RequiredRouteParameter,
  filename: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/info(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_info_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/info/properties(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_info_properties_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/info/routes(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_info_routes_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/mailers(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_mailers_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/action_mailbox/mailgun/inbound_emails/mime(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_mailgun_inbound_emails_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/action_mailbox/mandrill/inbound_emails(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_mandrill_inbound_emails_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/action_mailbox/mandrill/inbound_emails(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_mandrill_inbound_health_check_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/action_mailbox/postmark/inbound_emails(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_postmark_inbound_emails_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/action_mailbox/relay/inbound_emails(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_relay_inbound_emails_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/action_mailbox/sendgrid/inbound_emails(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_sendgrid_inbound_emails_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/active_storage/blobs/redirect/:signed_id/*filename(.:format)
 * @param {any} signed_id
 * @param {any} filename
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_service_blob_path: ((
  signed_id: RequiredRouteParameter,
  filename: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/active_storage/blobs/proxy/:signed_id/*filename(.:format)
 * @param {any} signed_id
 * @param {any} filename
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const rails_service_blob_proxy_path: ((
  signed_id: RequiredRouteParameter,
  filename: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/received(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const received_person_messages_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/domain/recheck_domain_setup(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const recheck_domain_setup_admin2_general_domains_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/domain/recheck_domain_setup(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const recheck_domain_setup_admin_domain_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/manage-transactions/:id/refund(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const refund_admin2_transactions_reviews_manage_transaction_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/transactions/:id/refund(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const refund_admin_community_transaction_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/manage-listings/:id/reject(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const reject_admin2_listings_manage_listing_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/listings/:id/reject(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const reject_admin_community_listing_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:id/reject_preauthorized(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const reject_preauthorized_person_message_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/landing-page/:id/release(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const release_admin2_design_landing_page_version_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/landing_page_versions/:id/release(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const release_admin_landing_page_version_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/categories/:id/remove(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const remove_admin_category_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/logos-and-color/remove_files(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const remove_files_admin2_design_logos_color_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/categories/:id/remove_popup(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const remove_popup_admin2_listings_category_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/listing_images/reorder(.:format)
 * @param {any} listing_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const reorder_listing_listing_images_path: ((
  listing_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/sessions/request_new_password(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const request_new_password_sessions_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/manage-users/:id/resend_confirmation(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const resend_confirmation_admin2_users_manage_user_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/community_memberships/:id/resend_confirmation(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const resend_confirmation_admin_community_community_membership_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/emails/custom-outgoing-address/resend_verification_email(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const resend_verification_email_admin2_emails_outgoing_emails_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/resend_verification_email(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const resend_verification_email_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/domain/reset_domain_setup(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const reset_domain_setup_admin2_general_domains_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/domain/reset_domain_setup(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const reset_domain_setup_admin_domain_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/domain/retry_domain_setup(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const retry_domain_setup_admin2_general_domains_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/domain/retry_domain_setup(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const retry_domain_setup_admin_domain_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /s(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const s_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/minimum-listing-price/save(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const save_admin2_payment_system_transaction_size_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /:locale/s(.:format)
 * @param {any} locale
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const search_with_locale_path: ((
  locale: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /s(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const search_without_locale_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/emails/:id/send_confirmation(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const send_confirmation_person_email_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/stripe_account/send_verification(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const send_verification_person_stripe_account_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/sessions/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const session_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/sessions(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const sessions_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/settings(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const settings_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/listings/:id/show_in_updates_email(.:format)
 * @param {any} person_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const show_in_updates_email_person_listing_path: ((
  person_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/manage-reviews/:id/show_review(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const show_review_admin2_transactions_reviews_manage_review_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/homepage/sign_in(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const sign_in_homepage_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/signup(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const sign_up_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:conversation_type/:id(.:format)
 * @param {any} person_id
 * @param {any} conversation_type
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const single_conversation_path: ((
  person_id: RequiredRouteParameter,
  conversation_type: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/messages/:message_id/feedbacks/skip(.:format)
 * @param {any} person_id
 * @param {any} message_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const skip_person_message_feedbacks_path: ((
  person_id: RequiredRouteParameter,
  message_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/sms(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const sms_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/social_media(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const social_media_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/preauthorize_transactions/:id/stripe_confirm_intent(.:format)
 * @param {any} listing_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const stripe_confirm_intent_listing_preauthorize_transaction_path: ((
  listing_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:listing_id/preauthorize_transactions/:id/stripe_failed_intent(.:format)
 * @param {any} listing_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const stripe_failed_intent_listing_preauthorize_transaction_path: ((
  listing_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/paypal_service/checkout_orders/success(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const success_paypal_service_checkout_orders_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/paypal_service/checkout_orders/success_processed(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const success_processed_paypal_service_checkout_orders_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/terms(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const terms_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/infos/terms(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const terms_infos_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/domain/test_dns(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const test_dns_admin2_general_domains_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/test_welcome_email(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const test_welcome_email_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/topbar(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const topbar_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/transactions/created/:transaction_id(.:format)
 * @param {any} transaction_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const transaction_created_path: ((
  transaction_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/transactions/finalize_processed/:process_token(.:format)
 * @param {any} process_token
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const transaction_finalize_processed_path: ((
  process_token: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/transactions/transaction_op_status/:process_token(.:format)
 * @param {any} process_token
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const transaction_op_status_path: ((
  process_token: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/settings/transactions(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const transactions_person_settings_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /ui_api/topbar_props(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const ui_api_topbar_props_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/manage-users/:id/unban(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const unban_admin2_users_manage_user_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/community_memberships/:id/unban(.:format)
 * @param {any} community_id
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const unban_admin_community_community_membership_path: ((
  community_id: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/:id/unfollow(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const unfollow_listing_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:community_id/testimonials/unskip(.:format)
 * @param {any} community_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const unskip_admin_community_testimonials_path: ((
  community_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/invitations/unsubscribe(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const unsubscribe_invitations_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/settings/unsubscribe(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const unsubscribe_person_settings_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/admin-notifications/update_admin_notifications(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_admin_notifications_admin2_general_admin_notifications_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /int_api/listings/:id/update_blocked_dates(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_blocked_dates_int_api_listing_path: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/seo/category-pages-meta-tags/update_category_page(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_category_page_admin2_seo_category_pages_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/configure-transactions/update_config(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_config_admin2_transactions_reviews_config_transactions_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/country-currency/update_country_currencies(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_country_currencies_admin2_payment_system_country_currencies_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/cover-photos/update_cover_photos(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_cover_photos_admin2_design_cover_photos_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/update_details(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_details_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/arrangement/update_display(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_display_admin2_design_display_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/emails/welcome-email/update_email(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_email_admin2_emails_welcome_emails_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/essentials/update_essential(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_essential_admin2_general_essentials_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/advanced/new-features/update_experimental(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_experimental_admin2_advanced_experimental_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing_fields/update_expiration(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_expiration_admin2_listings_listing_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/custom_fields/update_expiration(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_expiration_admin_custom_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/footer/update_footer(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_footer_admin2_design_footer_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/analytics/google-analytics/update_google(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_google_admin2_analytics_google_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/social-media/image-and-tags/update_image(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_image_admin2_social_media_image_tags_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/seo/landing-page-meta-tags/update_landing_page(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_landing_page_admin2_seo_landing_pages_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing-approval/update_listing_approval(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_listing_approval_admin2_listings_listing_approval_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing-comments/update_listing_comments(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_listing_comments_admin2_listings_listing_comments_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/seo/listing-pages-meta-tags/update_listing_page(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_listing_page_admin2_seo_listing_pages_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing_fields/update_location(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_location_admin2_listings_listing_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/search-and-location/location/update_location(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_location_admin2_search_location_locations_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/custom_fields/update_location(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_location_admin_custom_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/logos-and-color/update_logos_color(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_logos_color_admin2_design_logos_color_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/emails/automatic-newsletter/update_newsletter(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_newsletter_admin2_emails_newsletters_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/:person_id/settings/payments(.:format)
 * @param {any} person_id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_person_payment_settings_path: ((
  person_id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/listings/listing_fields/update_price(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_price_admin2_listings_listing_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/custom_fields/update_price(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_price_admin_custom_fields_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/general/privacy/update_privacy(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_privacy_admin2_general_privacy_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/seo/profile-pages-meta-tags/update_profile_page(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_profile_page_admin2_seo_profile_pages_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/active_storage/disk/:encoded_token(.:format)
 * @param {any} encoded_token
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_rails_disk_service_path: ((
  encoded_token: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/advanced/recaptcha/update_recaptcha(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_recaptcha_admin2_advanced_recaptcha_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/transactions-and-reviews/manage-reviews/:id/update_review(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_review_admin2_transactions_reviews_manage_review_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/advanced/custom-script/update_script(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_script_admin2_advanced_custom_scripts_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/search-and-location/search/update_search(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_search_admin2_search_location_search_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/seo/search-page-meta-tags/update_search_pages(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_search_pages_admin2_seo_search_pages_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/communities/:id/update_settings(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_settings_admin_community_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/social-media/social-share-buttons/update_share_buttons(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_share_buttons_admin2_social_media_social_share_buttons_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/signup-and-login/update_signup_login(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_signup_login_admin2_users_signup_login_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/stripe/update_stripe_keys(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_stripe_keys_admin2_payment_system_stripe_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin_old/payment_preferences/update_stripe_keys(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_stripe_keys_admin_payment_preferences_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/top-bar/update_topbar(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_topbar_admin2_design_topbar_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/social-media/twitter/update_twitter(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_twitter_admin2_social_media_twitter_index_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/users/user-rights/update_user_rights(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_user_rights_admin2_users_user_rights_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /int_api/listings/:id/update_working_time_slots(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const update_working_time_slots_int_api_listing_path: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/user_feedbacks/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const user_feedback_path: ((
  id: RequiredRouteParameter,
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/user_feedbacks(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const user_feedbacks_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/design/landing-page/valid_listing(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const valid_listing_admin2_design_landing_page_versions_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/listings/verification_required(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const verification_required_listings_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * (/:locale)/admin/payment-system/country-currency/verify_currency(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const verify_currency_admin2_payment_system_country_currencies_path: ((
  options?: {locale?: OptionalRouteParameter, format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /webhooks/plans(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const webhooks_plans_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /webhooks/trials(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const webhooks_trials_path: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

// By some reason this line prevents all types in a file
// from being automatically exported
export {};
